{
  "openapi": "3.0.1",
  "info": {
    "description": "",
    "title": "Vendor API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.nomba.com"
    },
    {
      "description": "Sandbox",
      "url": "https://sandbox.nomba.com"
    }
  ],
  "tags": [
    {
      "name": "Authenticate"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Terminals"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "Online Checkout"
    }
  ],
  "paths": {
    "/v1/auth/token/issue": {
      "post": {
        "description": "You can use this endpoint to authenticate with Nomba.",
        "operationId": "Obtain access token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueTokenRequest"
              }
            }
          },
          "description": "The request payload required for authentication",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueTokenResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Your authentication request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "summary": "Obtain access token",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Authenticate"
        ]
      }
    },
    "/v1/auth/token/refresh": {
      "post": {
        "description": "You can use this endpoint to refresh an expired `access_token`.",
        "operationId": "Refresh an expired token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "description": "The request payload required to refresh the client's `access_token`",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueTokenResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Your request to refresh a token was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Refresh an expired token",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Authenticate"
        ]
      }
    },
    "/v1/auth/token/revoke": {
      "post": {
        "description": "You can use this endpoint to revoke an `access_token`.",
        "operationId": "Revoke an access_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            }
          },
          "description": "The request payload required to revoke a clients `access_token`",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeTokenResponse"
                }
              }
            },
            "description": "Your request to revoke an access_token was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "summary": "Revoke an access_token",
        "tags": [
          "Authenticate"
        ]
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "You can use this endpoints to fetch all the accounts tied to a business. Accounts are sorted by date, with the most recently-created account appearing first.",
        "operationId": "List all accounts",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "Contains all accounts tied to a specific merchant/business",
                      "items": {
                        "type": "object",
                        "description": "A structure representing a Nomba account.",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The id of the account.",
                            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
                            "maxLength": 36,
                            "minLength": 36
                          },
                          "accountHolderId": {
                            "type": "string",
                            "description": "The businessId of the parent that houses this account.",
                            "example": "412316"
                          },
                          "accountRef": {
                            "type": "string",
                            "description": "Unique reference used to track an account from an external process. Would be auto-generated if not provided at the point of creation.",
                            "example": "ACT_AMF0YN8UWH8CR8JZ",
                            "maxLength": 20,
                            "minLength": 20
                          },
                          "phoneNumber": {
                            "type": "string",
                            "description": "The phoneNumber that is unique to the account bearer.",
                            "example": "2348188667580"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the account bearer.",
                            "example": "test123@exam.ple"
                          },
                          "bvn": {
                            "type": "string",
                            "description": "Bank verification number of the account bearer.",
                            "example": "12234412345",
                            "maxLength": 11,
                            "minLength": 11
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the account.",
                            "enum": [
                              "virtual",
                              "physical"
                            ],
                            "example": "physical"
                          },
                          "accountName": {
                            "type": "string",
                            "description": "Name of the account bearer.",
                            "example": "Testing Testing123",
                            "maxLength": 255,
                            "minLength": 2
                          },
                          "banks": {
                            "type": "array",
                            "description": "Contains all the bank details tied to a Nomba account",
                            "items": {
                              "type": "object",
                              "description": "A structure representing a bank account",
                              "properties": {
                                "bankAccountNumber": {
                                  "type": "string",
                                  "description": "The bank account number tied to the Nomba account.",
                                  "example": "0554772814",
                                  "maxLength": 10,
                                  "minLength": 10
                                },
                                "bankName": {
                                  "type": "string",
                                  "description": "The bank's name.",
                                  "example": "Wema Bank"
                                },
                                "bankAccountName": {
                                  "type": "string",
                                  "description": "The name on the account.",
                                  "example": "M.A Animashaun"
                                }
                              }
                            }
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the account bearer.",
                            "example": "4, Alagomeji, Yaba, Lagos",
                            "maxLength": 255,
                            "minLength": 0
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the account.",
                            "enum": [
                              "active",
                              "pnd",
                              "fraudulent",
                              "suspend"
                            ],
                            "example": "active"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Primary currency on the account (Only supported at the moment is “NGN”).",
                            "example": "NGN",
                            "maxLength": 3,
                            "minLength": 3
                          },
                          "description": {
                            "type": "string",
                            "description": "Brief description of the account.",
                            "example": "Meat kebab spot"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The date and time this entity was created. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ssZ`.",
                            "example": "2022-07-08T14:33:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The date and time this entity was updated. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ssZ`.",
                            "example": "2022-07-08T14:33:00Z"
                          }
                        }
                      }
                    },
                    "cursor": {
                      "type": "string",
                      "format": "int32",
                      "description": "Value used to scroll to next page. It will be empty if there is no more page to scroll to",
                      "example": "xchbaVFsjdsbaADddd"
                    }
                  }
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List all accounts",
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "description": "You can use this endpoint to create an account that is part of your business.",
        "operationId": "Create an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          },
          "description": "The request payload required to create an account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CreateAccountResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Account creation successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/virtual": {
      "post": {
        "description": "You can use this endpoint to create a virtual account that is part of your business.",
        "operationId": "Create virtual account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVirtualAccountRequest"
              }
            }
          },
          "description": "The request payload required to create an account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CreateVirtualAccountResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Account creation successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create virtual account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{accountId}": {
      "get": {
        "description": "You can use this endpoint to get details of a single account.",
        "operationId": "Fetch account details",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The details of the account to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AccountDetailsResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch account details",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/parent": {
      "get": {
        "description": "You can use this endpoint to get details of the parent account.",
        "operationId": "Fetch parent account details",
        "parameters": [
          {
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AccountDetailsResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch parent account details",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{accountId}/balance": {
      "get": {
        "description": "You can use this endpoint to get the balance of a single account.",
        "operationId": "Fetch account balance",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The account whose balance is to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AccountBalanceResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch account balance",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/balance": {
      "get": {
        "description": "You can use this endpoint to get the balance of the parent account.",
        "operationId": "Fetch parent account balance",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AccountBalanceResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch parent account balance",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/suspend/{accountId}": {
      "put": {
        "description": "You can use this endpoint to suspend an account.",
        "operationId": "Suspend an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The account to be suspended.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "type": "boolean",
                      "description": "Response data",
                      "example": true
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Suspend an account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/reactivate/{accountId}": {
      "put": {
        "description": "You can use this endpoint to reactivate an account.",
        "operationId": "Reactivate an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The account to be reactivated.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "type": "boolean",
                      "description": "Response data",
                      "example": true
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reactivate an account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/{accountId}/terminals": {
      "get": {
        "description": "You can use this endpoint to fetch terminals linked to an account.",
        "operationId": "Fetch terminals assigned to an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose transactions are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal ID",
            "example": "2KUD1234",
            "in": "query",
            "name": "terminalId",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal ID",
            "example": "91235335668790",
            "in": "query",
            "name": "serialNumber",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal Label",
            "example": "M.A.Terminal",
            "in": "query",
            "name": "terminalLabel",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Merchant Name",
            "example": "Daniel.Sc",
            "in": "query",
            "name": "merchantName",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch terminals assigned to an account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/accounts/terminals": {
      "get": {
        "description": "You can use this endpoint to fetch terminals linked to the parent account.",
        "operationId": "Fetch terminals assigned to the parent account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal ID",
            "example": "2KUD1234",
            "in": "query",
            "name": "terminalId",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal ID",
            "example": "91235335668790",
            "in": "query",
            "name": "serialNumber",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Terminal Label",
            "example": "M.A.Terminal",
            "in": "query",
            "name": "terminalLabel",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Merchant Name",
            "example": "Daniel.Sc",
            "in": "query",
            "name": "merchantName",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch terminals assigned to the parent account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/v1/checkout/order": {
      "post": {
        "description": "You can use this endpoint to create an online checkout order. Load the URL returned in 'checkoutLink' property in a browser to allow your customer initiate payment.",
        "operationId": "Create an online checkout order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          },
          "description": "The request payload required to create a checkout order.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "checkout order created successful"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CreateOrderResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create an online checkout order",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Online Checkout"
        ]
      }
    },
    "/v1/checkout/tokenized-card-payment": {
      "post": {
        "description": "You can use this endpoint to charge a customer's card using the tokenized card details.",
        "operationId": "charge customer with tokenized card data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedCardPaymentRequest"
              }
            }
          },
          "description": "The request payload required to perform a tokenized payment.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "payment successful"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TokenizedCardPaymentResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Charge a customer using tokenized card data",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Online Checkout"
        ]
      }
    },
    "/v1/checkout/tokenized-card-data": {
      "get": {
        "description": "Fetch list of merchant's tokenized cards",
        "operationId": "List all tokenized cards for merchant",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "Merchant's email address",
            "example": "abcde@gmail.com",
            "in": "query",
            "name": "customerEmail",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start date, based on the date the token was created",
            "example": "2023-08-08T23:59:59",
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "end date, based on the date the token was created",
            "example": "2023-08-08T23:59:59",
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specifies the page number to start retriving data from. For first request, this can be ommited or set to 0",
            "example": 0,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "response description"
                    },
                    "data": {
                      "type": "object",
                      "properties":{
                        "nextPage": {
                          "type": "string",
                          "format": "int32",
                          "description": "The value of the next page for data retrieval. This value is zero if there are no more pages to retrieve",
                          "example": "2"
                        },
                        "tokenizedCardDataList": {
                          "type": "array",
                          "description": "Contains all tokenized card data meeting the search criteria",
                          "items": {
                            "$ref":
                            "#/components/schemas/TokenizedCardData"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List tokenized cards",
        "tags": [
          "Online Checkout"
        ]
      },
      "post": {
        "description": "Update a tokenized card details",
        "operationId": "Update tokenized card data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenizedCardDataRequest"
              }
            }
          },
          "description": "The request payload required to upate the tokenized card data",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateTokenizedCardDataResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Data update successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update tokenzied card data",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Online Checkout"
        ]
      },
      "delete": {
        "description": "Delete a tokenized card details",
        "operationId": "Delete tokenized card data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTokenizedCardDataRequest"
              }
            }
          },
          "description": "The request payload required to upate the tokenized card data",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeleteTokenizedCardDataResponse"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "Data update successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update tokenzied card data",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Online Checkout"
        ]
      }    },
    "/v1/checkout/transaction": {
      "get": {
        "description": "Fetch checkout transaction",
        "operationId": "Fetch a checkout transaction",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "Checkout id type to use for this query. Valid values are the 'ORDER_REFERENCE', to use Order reference passed in when generating the checkout link, and 'ORDER_ID' to use the uuid value returned in the checkout link path.",
            "example": "ORDER_ID",
            "in": "query",
            "name": "idType",
            "schema": {
              "type": "string",
              "enum":["ORDER_ID", "ORDER_REFERENCE"]
            }
          },
          {
            "description": "Checkout transaction id based on the value selected in the idType parameter",
            "example": "120022e-e6ca27-33ed-ee7872e6ca27",
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CheckoutTransaction"
                    }
                  }
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "List tokenized cards",
        "tags": [
          "Online Checkout"
        ]
      }
    },
    "/v1/transfers/banks": {
      "get": {
        "description": "You can use this endpoint to fetch all banks, their names and codes.",
        "operationId": "Fetch bank codes and names",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BanksListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch bank codes and names.",
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/bank/lookup": {
      "post": {
        "description": "You can use this endpoint to perform bank account lookup.",
        "operationId": "Perform bank account lookup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountLookupRequest"
              }
            }
          },
          "description": "The request payload required to perform bank account lookup",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankAccountLookupResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Perform bank account lookup",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/bank": {
      "post": {
        "description": "You can use this endpoint to perform bank account transfer.",
        "operationId": "Perform bank account transfer the parent account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountTransferRequest"
              }
            }
          },
          "description": "The request payload required to perform bank account transfer.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankAccountTransferResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Perform bank account transfer from the parent account.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/bank/{accountId}": {
      "post": {
        "description": "You can use this endpoint to perform bank account transfer.",
        "operationId": "Perform bank account transfer from account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountTransferRequest"
              }
            }
          },
          "description": "The request payload required to perform bank account transfer.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankAccountTransferResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Perform bank account transfer from account.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId to transfer from.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/wallet": {
      "post": {
        "description": "You can use this endpoint to perform a wallet transfer.",
        "operationId": "Perform wallet transfer from the parent account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletTransferRequest"
              }
            }
          },
          "description": "The request payload required to perform a wallet transfer.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WalletTransferResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Perform wallet transfer from the parent account.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/transfers/wallet/{accountId}": {
      "post": {
        "description": "You can use this endpoint to perform a wallet transfer.",
        "operationId": "Perform wallet transfer from account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletTransferRequest"
              }
            }
          },
          "description": "The request payload required to perform a wallet transfer.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WalletTransferResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Perform wallet transfer from account.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId to transfer from.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/v1/terminals/assign/{accountId}": {
      "post": {
        "description": "You can use this endpoint to assign a terminal to an account.",
        "operationId": "Assign a terminal to an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAssignmentRequest"
              }
            }
          },
          "description": "The request payload required to assign a terminal to an account.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assign a terminal to an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose terminals are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Terminals"
        ]
      }
    },
    "/v1/terminals/assign": {
      "post": {
        "description": "You can use this endpoint to assign a terminal to the parent account.",
        "operationId": "Assign a terminal to the parent account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAssignmentRequest"
              }
            }
          },
          "description": "The request payload required to assign a terminal to an account.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assign a terminal to the parent account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Terminals"
        ]
      }
    },
    "/v1/terminals/unassign/{accountId}": {
      "post": {
        "description": "You can use this endpoint to un-assign a terminal from an account.",
        "operationId": "Un-assign terminal from an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAssignmentRequest"
              }
            }
          },
          "description": "The request payload required to un-assign a terminal from an account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Un-assign terminal from an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose terminals are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Terminals"
        ]
      }
    },
    "/v1/terminals/unassign": {
      "post": {
        "description": "You can use this endpoint to un-assign a terminal from the parent account.",
        "operationId": "Un-assign a terminal from the parent account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAssignmentRequest"
              }
            }
          },
          "description": "The request payload required to un-assign a terminal from an account",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TerminalResult"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Un-assign a terminal from the parent account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          }
        ],
        "tags": [
          "Terminals"
        ]
      }
    },
    "/v1/transactions/bank/{accountId}": {
      "get": {
        "description": "You can use this endpoint to fetch credit/debit transactions on an account.",
        "operationId": "Fetch credit/debit transactions on an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose terminals are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankTransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch credit/debit transactions on an account.",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/transactions/bank": {
      "get": {
        "description": "You can use this endpoint to fetch credit/debit transactions on the parent account.",
        "operationId": "Fetch credit/debit transactions on the parent account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankTransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch credit/debit transactions on the parent account.",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/transactions/accounts/{accountId}": {
      "get": {
        "description": "You can use this endpoint to fetch transactions on an account.",
        "operationId": "Fetch transactions on an account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose terminals are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch transactions on an account.",
        "tags": [
          "Transactions"
        ]
      },
      "post": {
        "description": "You can use this endpoint to filter transactions on an account.",
        "operationId": "Filter account transactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterTransactionRequest"
              }
            }
          },
          "description": "The request payload required to filter account transactions.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Filter account transactions.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "The accountId whose terminals are to be fetched.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/transactions/accounts": {
      "get": {
        "description": "You can use this endpoint to fetch transactions on the parent account.",
        "operationId": "Fetch transactions on the parent account",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Fetch transactions on the parent account.",
        "tags": [
          "Transactions"
        ]
      },
      "post": {
        "description": "You can use this endpoint to filter transactions on the parent account.",
        "operationId": "Filter parent account transactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterTransactionRequest"
              }
            }
          },
          "description": "The request payload required to filter account transactions.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "00",
                      "description": "Response Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "Success",
                      "description": "Response description"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TransactionListResults"
                    }
                  },
                  "required": [
                    "code",
                    "description",
                    "data"
                  ]
                }
              }
            },
            "description": "OK - your request was successful.",
            "headers": {
              "X-Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "40"
                }
              },
              "X-Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "schema": {
                  "type": "string",
                  "example": "39"
                }
              },
              "X-Rate-Limit-Window": {
                "description": "The specified rate limit window",
                "schema": {
                  "type": "string",
                  "example": "1s"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestError"
                }
              }
            },
            "description": "The request body sent by merchant did not pass the validation checks"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            },
            "description": "The access_token provided to access the resource is missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationError"
                }
              }
            },
            "description": "The client does not have the permissions to access this resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordNotFoundError"
                }
              }
            },
            "description": "The record that the client is trying to access does not exist."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitError"
                }
              }
            },
            "description": "The client has maxed out the number of calls within a time period on this resource."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            },
            "description": "Downstream system error."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Filter parent account transactions.",
        "parameters": [
          {
            "description": "The parent accountId of the business.",
            "in": "header",
            "name": "accountId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
            },
            "required": true
          },
          {
            "description": "This endpoint is paginated. `limit` describes the size of the page you are querying",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "description": "The `cursor` is used to scroll to the next page. When making the first call to list all accounts, there is no need to pass in any cursor since the API has not returned any cursor back to you. Only use cursor when the API provides it",
            "example": "xchbaVFsjdsbaADddd",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This starting date (UTC)",
            "in": "query",
            "name": "dateFrom",
            "example": "2023-09-08T00:00:00.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "This ending date",
            "in": "query",
            "name": "dateTo",
            "example": "2023-08-08T23:59:59.007Z",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CheckoutTransaction": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "True if the transaction is already completed and successful, false otherwise",
            "example": "true"
          },
          "message": {
            "type": "string",
            "description": "Response message describing the transaction status",
            "example": "success"
          },
          "order": {
            "$ref":"#/components/schemas/OrderDetails"
          },
          "transactionDetails": {
            "$ref" :"#/components/schemas/CheckoutTransactionDetails"
          },
          "transferDetails": {
            "$ref" :"#/components/schemas/CheckoutTransferDetails"
          },
          "cardDetails": {
            "$ref" :"#/components/schemas/CheckoutCardDetails"

          }
        }

      },
      "OrderDetails": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The internally generated Id for the checkout order",
            "example": "56e03654-0c32-4d3e-bbd6-a9df22994a12"
          },
          "orderReference": {
            "type": "string",
            "description": "reference of the online checkout order to be created",
            "example": "90e81e8a-bc14-4ebf-89c0-57da752cca58"
          },
          "customerId": {
            "type": "string",
            "description": "customer id",
            "example": "762878332454"
          },
          "accountId": {
            "type": "string",
            "description": "The account Id whose wallet will be credited when the order is paid",
            "example": "56e03654-0c32-4d3e-bbd6-a9df22994a12"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Merchant callback url for redirect after payment",
            "example": "https://ip:port/merchant.com/callback"
          },
          "customerEmail": {
            "type": "string",
            "description": "customer email",
            "example": "abcde@gmail.com"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to pay",
            "example": "10000.00"
          },
          "currency": {
            "type": "string",
            "description": "currency of the money",
            "example": "NGN"
          }
        }
      },
      "CheckoutTransactionDetails": {
        "type": "object",
        "properties": {
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the transaction was created",
            "example": "2023-12-06T15:46:43.000Z"
          },
          "paymentReference": {
            "type": "string",
            "description": "The payment reference for the transaction",
            "example": "5844858382134"
          },
          "paymentVendorReference": {
            "type": "string",
            "description": "The payment reference returned by the payment gateway",
            "example": "5844858382675493"
          },
          "tokenizedCardPayment": {
            "type": "boolean",
            "description": "True if the payment was made by a tokenized card",
            "example": "true"
          },
          "statusCode": {
            "type": "string",
            "description": "transaction status code returned by the payment gateway",
            "example": "Payment approved"
          }
        }
      },
      "CheckoutTransferDetails": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Transfer sessionId",
            "example": "67584432178569543"
          },
          "beneficiaryAccountName": {
            "type": "string",
            "description": "The account name associated with the Merchants Amucha account",
            "example": "Tope Fade"
          },
          "beneficiaryAccountNumber": {
            "type": "string",
            "description": "The Flash account number, where the payment was made to",
            "example": "5844858382"
          },
          "originatorAccountName": {
            "type": "string",
            "description": "The name of the person making the transfer",
            "example": "Femi Fash"
          },
          "originatorAccountNumber": {
            "type": "string",
            "description": "Nuban account number of the person making the transfer",
            "example": "3409082834"
          },
          "narration": {
            "type": "string",
            "description": "The naration added by the customer when making the transfer",
            "example": "Checkout payment"
          },
          "destinationInstitutionCode": {
            "type": "string",
            "description": "Destination bank code",
            "example": "true"
          },
          "paymentReference": {
            "type": "string",
            "description": "Transfer payment reference passed in from NIBSS for the transfer",
            "example": "44384586756"
          }
        }
      },
      "CheckoutCardDetails": {
        "type": "object",
        "properties": {
          "cardPan": {
            "type": "string",
            "description": "The masked card pan",
            "example": "515123 **** **** 6667"
          },
          "cardType": {
            "type": "string",
            "description": "The Card type",
            "example": "Verve"
          },
          "cardCurrency": {
            "type": "string",
            "description": "The card currency",
            "example": "NGN"
          },
          "cardBank": {
            "type": "string",
            "description": "Card Bank code",
            "example": "057"
          }
        }
      },
      "DeleteTokenizedCardDataRequest": {
        "type": "object",
        "properties": {
          "tokenKey": {
            "type": "string",
            "description": "token key",
            "example": "5844858382"
          }
        },
        "required": [
          "tokenKey"
        ]
      },
      "DeleteTokenizedCardDataResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "status",
            "example": "true"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "success"
          }
        }
      },
      "UpdateTokenizedCardDataRequest": {
        "type": "object",
        "properties": {
          "tokenKey": {
            "type": "string",
            "description": "token key",
            "example": "5844858382"
          },
          "currentEmailAddress": {
            "type": "string",
            "description": "customer email currently associated with the key",
            "example": "email@email.com"
          },
          "newEmailAddress": {
            "type": "string",
            "description": "new email to replace the old one",
            "example": "email@email.com"
          }
        },
        "required": [
          "tokenKey",
          "currentEmailAddress",
          "newEmailAddress"
        ]
      },
      "UpdateTokenizedCardDataResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "status",
            "example": "true"
          },
          "message": {
            "type": "string",
            "description": "customer email currently associated with the key",
            "example": "email@email.com"
          },
          "tokenizedCardData": {
            "items":{
              "$ref": "#/components/schemas/TokenizedCardData"
            }
          }
        }
      },
      "CreateOrderResponse": {
        "type": "object",
        "properties": {
          "checkoutLink": {
            "type": "string",
            "description": "Payment checkout link",
            "example": "https://ip:port/checkout/78388899938"
          },
          "orderReference": {
            "type": "string",
            "description": "The reference of the order created",
            "example": "90e81e8a-bc14-4ebf-89c0-57da752cca58"
          }
        },
        "required": [
          "checkoutLink",
          "orderReference"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "orderReference": {
            "type": "string",
            "description": "reference of the online checkout order to be created",
            "example": "90e81e8a-bc14-4ebf-89c0-57da752cca58"
          },
          "customerId": {
            "type": "string",
            "description": "customer id",
            "example": "762878332454"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Merchant callback url for redirect after payment",
            "example": "https://ip:port/merchant.com/callback"
          },
          "customerEmail": {
            "type": "string",
            "description": "customer email",
            "example": "abcde@gmail.com"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to pay",
            "example": "10000.00"
          },
          "currency": {
            "type": "string",
            "description": "currency of the money",
            "example": "NGN"
          }
        },
        "required": [
          "callbackUrl",
          "customerEmail",
          "amount",
          "currency"
        ]
      },
      "CreateOrderRequest": {
        "type": "object",
        "description": "The Checkout request object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tokenizeCard": {
            "type": "boolean",
            "description": "Determines if the card used for payment is to be tokenized",
            "example": "true"
          }
        },
        "required": [
          "order"
        ]
      },
      "TokenizedCardPaymentRequest": {
        "type": "object",
        "description": "The Tokenized card payment request object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tokenKey": {
            "type": "string",
            "description": "the token key returned in the webhook",
            "example": "7628788443"
          }
        },
        "required": [
          "tokenKey"
        ]
      },
      "TokenizedCardPaymentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "status of the transaction",
            "example": "true"
          },
          "message": {
            "type": "string",
            "description": "some details of the transaction response.",
            "example": "success"
          }
        }
      },
      "TokenizedCardData": {
        "type": "object",
        "properties": {
          "tokenKey": {
            "type": "string",
            "description": "the key associated with the tokenzied card",
            "example": "e890bd1a9f0d"
          },
          "customerEmail": {
            "type": "string",
            "description": "customer email",
            "example": "email@email.com"
          },
          "cardType": {
            "type": "string",
            "description": "Unique reference used to track an account from an external process. Would be auto-generated if not provided at the point of creation.",
            "example": "Verve"
          },
          "cardPan": {
            "type": "string",
            "description": "Card pan",
            "example": "234818********7580"
          },
          "tokenExpirationDate": {
            "type": "string",
            "description": "token expiration date",
            "example": "20/20"
          }
        }
      },
      "BankAccountTransferMetaObject": {
        "type": "object",
        "properties": {
          "merchantTxRef": {
            "type": "string",
            "description": "Merchant transaction reference",
            "example": "3JVW2xJCjj443oannREBuTaXDdji"
          },
          "api_client_id": {
            "type": "string",
            "description": "API client ID",
            "example": "6a7bed88-7c93-4a1c-a445-f88edbca6489"
          },
          "api_account_id": {
            "type": "string",
            "description": "API account ID",
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "rrn": {
            "type": "string",
            "description": "RRN (Retrieval Reference Number)",
            "example": "230908151711"
          }
        },
        "description": "Transaction meta data"
      },
      "BankAccountTransferRequest": {
        "type": "object",
        "description": "A structure representing an object required to post a bank account transfer.",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount to be transferred.",
            "example": 3500
          },
          "accountNumber": {
            "type": "string",
            "description": "The destination bank account number.",
            "example": "0554772814",
            "maxLength": 10,
            "minLength": 10
          },
          "accountName": {
            "type": "string",
            "description": "The name on the account.",
            "example": "M.A Animashaun"
          },
          "bankCode": {
            "type": "string",
            "description": "The code of the recipient bank.",
            "example": "058"
          },
          "merchantTxRef": {
            "type": "string",
            "description": "Unique reference used to track a transaction from an external process.",
            "example": "UNQ_123abGGhh5546"
          },
          "senderName": {
            "type": "string",
            "description": "Sender name",
            "example": "Nightly Post"
          },
          "pin": {
            "type": "string",
            "description": "PIN",
            "example": "2222"
          }
        },
        "required": [
          "amount",
          "accountNumber",
          "bankCode",
          "accountName",
          "merchantTxRef",
          "senderName",
          "pin"
        ]
      },
      "BankAccountTransferResult": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Transfer amount",
            "example": 5502.0
          },
          "meta": {
            "$ref": "#/components/schemas/BankAccountTransferMetaObject"
          },
          "fee": {
            "type": "number",
            "format": "double",
            "description": "Transfer fee",
            "example": 50.0
          },
          "timeCreated": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2023-09-08T14:17:13.634Z"
          },
          "id": {
            "type": "string",
            "description": "Transfer ID",
            "example": "API-TRANSFER-C24AD-a6443bf0-011c-4bc2-b739-4a2e33e2a27b"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "transfer"
          },
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "SUCCESS"
          }
        },
        "required": [
          "amount",
          "meta",
          "fee",
          "timeCreated",
          "id",
          "type",
          "status"
        ],
        "description": "Transfer data"
      },
      "BankAccountLookupRequest": {
        "type": "object",
        "description": "A structure representing a bank account lookup request",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "The account number to be looked up.",
            "example": "0554772814",
            "maxLength": 10,
            "minLength": 10
          },
          "bankCode": {
            "type": "string",
            "description": "The bankCode of the bank the account number belongs to. This can be obtained from a call to `/v1/transfers/bank` ",
            "example": "053"
          }
        },
        "required": [
          "accountNumber",
          "bankCode"
        ]
      },
      "BankAccountLookupResult": {
        "type": "object",
        "description": "A structure representing a bank account lookup result",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "The account number already looked up.",
            "example": "0554772814",
            "maxLength": 10,
            "minLength": 10
          },
          "accountName": {
            "type": "string",
            "description": "The name on the account.",
            "example": "M.A Animashaun"
          }
        }
      },
      "Banks": {
        "type": "object",
        "description": "A structure representing a bank",
        "properties": {
          "code": {
            "type": "string",
            "description": "The bank's code.",
            "example": "058",
            "maxLength": 6,
            "minLength": 3
          },
          "name": {
            "type": "string",
            "description": "The bank's name.",
            "example": "Guaranty Trust Bank"
          }
        }
      },
      "BanksListResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Contains result of all banks fetched",
            "items": {
              "$ref": "#/components/schemas/Banks"
            }
          }
        }
      },
      "CreateAccountRequest": {
        "type": "object",
        "properties": {
          "accountRef": {
            "type": "string",
            "description": "Account reference",
            "minLength": 16,
            "maxLength": 64,
            "example": "1oWbJQQHLyQqqf1SwxjSpudeA21"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "minLength": 11,
            "maxLength": 15,
            "example": "2348188667581"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "format": "email",
            "example": "ifeol-subaccount@exmple.com"
          },
          "bvn": {
            "type": "string",
            "description": "Bank Verification Number (BVN)",
            "minLength": 11,
            "maxLength": 11,
            "example": "12234412345"
          },
          "pin": {
            "type": "string",
            "description": "Personal Identification Number (PIN)",
            "minLength": 4,
            "maxLength": 4,
            "example": "1234"
          },
          "accountName": {
            "type": "string",
            "description": "Account holder's name",
            "minLength": 8,
            "maxLength": 64,
            "example": "Daniel Scorsese"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "NGN"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Callback url",
            "format": "url",
            "example": "https://webhook.site/98ef100f-5adc-4434-800a-0808h60bd8d7"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date",
            "example": "2023-12-06T15:46:43.000Z"
          }
        },
        "required": [
          "accountRef",
          "phoneNumber",
          "email",
          "bvn",
          "pin",
          "accountName",
          "currency"
        ]
      },
      "CreateAccountResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time",
            "example": "2023-09-04T07:09:06.900Z"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "fc81b80e-e607-4b86-8591-840925191733"
          },
          "accountHolderId": {
            "type": "string",
            "description": "Account holder ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "accountRef": {
            "type": "string",
            "description": "Account reference",
            "minLength": 16,
            "maxLength": 64,
            "example": "1oWbJQQHLyQqqf1SwxjSpudeA21"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "minLength": 11,
            "maxLength": 15,
            "example": "2348188667581"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "format": "email",
            "example": "ifeol-subaccount-4@exmple.com"
          },
          "bvn": {
            "type": "string",
            "description": "Bank Verification Number (BVN)",
            "minLength": 11,
            "maxLength": 11,
            "example": "12234412345"
          },
          "status": {
            "type": "string",
            "description": "Account status",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PND",
              "BLACKLISTED"
            ],
            "example": "ACTIVE"
          },
          "type": {
            "type": "string",
            "description": "Account type",
            "enum": [
              "virtual",
              "outlet"
            ],
            "example": "virtual"
          },
          "accountName": {
            "type": "string",
            "description": "Account holder's name",
            "minLength": 8,
            "maxLength": 64,
            "example": "Daniel Scorsese"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "NGN"
          },
          "callbackUrl": {
            "type": "string",
            "description": "Callback url",
            "format": "url",
            "example": "https://webhook.site/98ef100f-5adc-4434-800a-0808h60bd8d7"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Expiry date",
            "example": "2023-12-06T15:46:43.000Z"
          }
        },
        "required": [
          "createdAt",
          "accountId",
          "accountHolderId",
          "accountRef",
          "phoneNumber",
          "email",
          "bvn",
          "status",
          "type",
          "accountName",
          "currency"
        ]
      },
      "CreateVirtualAccountRequest": {
        "type": "object",
        "properties": {
          "accountRef": {
            "type": "string",
            "description": "Account reference",
            "minLength": 16,
            "maxLength": 64,
            "example": "1oWbJQQHLyQqqf1SwxjSpudeA21"
          },
          "accountName": {
            "type": "string",
            "description": "Account holder's name",
            "minLength": 8,
            "maxLength": 64,
            "example": "Daniel Scorsese"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "NGN"
          }
        },
        "required": [
          "accountRef",
          "accountName",
          "currency"
        ]
      },
      "CreateVirtualAccountResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time",
            "example": "2023-09-04T07:09:06.900Z"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "fc81b80e-e607-4b86-8591-840925191733"
          },
          "accountHolderId": {
            "type": "string",
            "description": "Account holder ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "accountRef": {
            "type": "string",
            "description": "Account reference",
            "minLength": 16,
            "maxLength": 64,
            "example": "1oWbJQQHLyQqqf1SwxjSpudeA21"
          },
          "bvn": {
            "type": "string",
            "description": "Bank Verification Number (BVN)",
            "minLength": 11,
            "maxLength": 11,
            "example": "12234412345"
          },
          "status": {
            "type": "string",
            "description": "Account status",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PND",
              "BLACKLISTED"
            ],
            "example": "ACTIVE"
          },
          "type": {
            "type": "string",
            "description": "Account type",
            "enum": [
              "virtual",
              "outlet"
            ],
            "example": "virtual"
          },
          "accountName": {
            "type": "string",
            "description": "Account holder's name",
            "minLength": 8,
            "maxLength": 64,
            "example": "Daniel Scorsese"
          },
          "banks": {
            "type": "array",
            "description": "List of associated bank accounts",
            "items": {
              "type": "object",
              "properties": {
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Bank account number",
                  "example": "93910"
                },
                "bankName": {
                  "type": "string",
                  "description": "Bank name",
                  "example": "Sterling Bank"
                },
                "bankAccountName": {
                  "type": "string",
                  "description": "Bank account holder name",
                  "example": "Nomba/Ifeoluwa Adeboye"
                }
              },
              "required": [
                "bankAccountNumber",
                "bankName",
                "bankAccountName"
              ]
            }
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "NGN"
          }
        },
        "required": [
          "createdAt",
          "accountId",
          "accountHolderId",
          "accountRef",
          "bvn",
          "status",
          "type",
          "accountName",
          "banks",
          "currency"
        ]
      },
      "RateLimitError": {
        "type": "object",
        "description": "Rate-limit error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "429"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Too many requests"
          }
        }
      },
      "AuthenticationError": {
        "type": "object",
        "description": "Authentication Error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "401"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Unauthorized"
          }
        }
      },
      "AuthorizationError": {
        "type": "object",
        "description": "Permissions error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "403"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Forbidden"
          }
        }
      },
      "RecordNotFoundError": {
        "type": "object",
        "description": "Record-Not-Found error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "404"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Record not found"
          }
        }
      },
      "RequestError": {
        "type": "object",
        "description": "Request Error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "400"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Request failed."
          }
        }
      },
      "ServerError": {
        "type": "object",
        "description": "Server error response.",
        "properties": {
          "code": {
            "type": "string",
            "description": "API error code.",
            "example": "500"
          },
          "description": {
            "type": "string",
            "description": "Additional details about the error.",
            "example": "Server error"
          }
        }
      },
      "IssueTokenRequest": {
        "type": "object",
        "description": "A structure representing an authentication request.",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "The grant type of the authentication.",
            "enum": [
              "client_credentials",
              "refresh_token"
            ],
            "example": "client_credentials"
          },
          "client_id": {
            "type": "string",
            "description": "The client's id as obtained from your Nomba dashboard.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "maxLength": 36,
            "minLength": 36
          },
          "client_secret": {
            "type": "string",
            "description": "The client's secret as obtained from your Nomba dashboard. It is securely generated by the Nomba system",
            "example": "JFJ8yq3G4+DvjivJMsji0YkZBkkKdSdjifR+TgT9RLM=",
            "maxLength": 44,
            "minLength": 44
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ]
      },
      "IssueTokenResponse": {
        "type": "object",
        "description": "A structure representing an authentication result.",
        "properties": {
          "businessId": {
            "type": "string",
            "description": "The accountId of the merchant/business that is connecting to the Nomba system via API",
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "access_token": {
            "type": "string",
            "description": "A JWT (Json Web Token) token used to grant access to resources on the Nomba API.",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJHOjhmYWM4M2FjLTc2YjAtNDM1Zi1hYTM1LThkOTU3ZGQ5MjdkZCI6Ikc6OGZhYzgzYWMtNzZiMC00MzVmLWFhMzUtOGQ5NTdkZDkyN2RkIiwiUjpURUFNU19PV05FUiI6IlI6VEVBTVNfT1dORVIiLCJFbWFpbDp2aWN0b3JzaG9hZ2FAZ21haWwuY29tIjoiRW1haWw6dmljdG9yc2hvYWdhQGdtYWlsLmNvbSIsImlhdCI6MTY4MTkxODU3OSwic3ViIjoiNWUyNmNmYjAtNTI5Zi00MTdiLWI4ZDItYWJjNDcxZjRjOWRiIiwiZXhwIjoxNjgxOTIyMTc5fQ.lQOsyhR1gajKdzE9IHQEtxhQyUrArctEDZiP9pWVTFY",
            "maxLength": 600,
            "minLength": 300
          },
          "refresh_token": {
            "type": "string",
            "description": "A Base64 Encoded String used to refresh an expired access_token",
            "example": "01h4gdx2tctxfjgacbdwrcvs5d1688473602892",
            "maxLength": 60,
            "minLength": 30
          },
          "expiresAt": {
            "type": "string",
            "description": "The date and time this entity was created. This value uses Coordinated Universal Time (UTC) and ISO 8601 format – `YYYY-MM-DDThh:mm:ssZ`.",
            "example": "2022-07-08T14:33:00Z"
          }
        },
        "required": [
          "businessId",
          "access_token",
          "refresh_token",
          "expiresAt"
        ]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "description": "A structure representing a refresh token request.",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "The grant type of the authentication.",
            "enum": [
              "client_credentials",
              "refresh_token"
            ],
            "example": "refresh_token"
          },
          "refresh_token": {
            "type": "string",
            "description": "A Base64 Encoded String used to refresh an expired access_token",
            "example": "01h4gdx2tctxfjgacbdwrcvs5d1688473602892",
            "maxLength": 60,
            "minLength": 30
          }
        },
        "required": [
          "grant_type",
          "refresh_token"
        ]
      },
      "RevokeTokenRequest": {
        "type": "object",
        "description": "A structure representing a request to revoke a token.",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "The client's id as obtained from your Nomba dashboard.",
            "example": "2242b79d-f2cf-4ccc-ada1-e890bd1a9f0d",
            "maxLength": 36,
            "minLength": 36
          },
          "access_token": {
            "type": "string",
            "description": "The JWT (Json Web Token) token to be revoked",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJHOjhmYWM4M2FjLTc2YjAtNDM1Zi1hYTM1LThkOTU3ZGQ5MjdkZCI6Ikc6OGZhYzgzYWMtNzZiMC00MzVmLWFhMzUtOGQ5NTdkZDkyN2RkIiwiUjpURUFNU19PV05FUiI6IlI6VEVBTVNfT1dORVIiLCJFbWFpbDp2aWN0b3JzaG9hZ2FAZ21haWwuY29tIjoiRW1haWw6dmljdG9yc2hvYWdhQGdtYWlsLmNvbSIsImlhdCI6MTY4MTkxODU3OSwic3ViIjoiNWUyNmNmYjAtNTI5Zi00MTdiLWI4ZDItYWJjNDcxZjRjOWRiIiwiZXhwIjoxNjgxOTIyMTc5fQ.lQOsyhR1gajKdzE9IHQEtxhQyUrArctEDZiP9pWVTFY",
            "maxLength": 600,
            "minLength": 300
          }
        },
        "required": [
          "clientId",
          "access_token"
        ]
      },
      "RevokeTokenResponse": {
        "type": "object",
        "description": "A structure representing a response from an attempt to revoke a token",
        "properties": {
          "code": {
            "type": "string",
            "description": "Tells if the access_token has been revoked",
            "example": "00"
          },
          "description": {
            "type": "string",
            "description": "Describes the result of the action performed",
            "example": "Token revoked successfully"
          }
        }
      },
      "AccountDetailsResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time",
            "example": "2023-09-04T07:09:06.900Z"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "fc81b80e-e607-4b86-8591-840925191733"
          },
          "accountHolderId": {
            "type": "string",
            "description": "Account holder ID",
            "minLength": 36,
            "maxLength": 36,
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "accountRef": {
            "type": "string",
            "description": "Account reference",
            "minLength": 16,
            "maxLength": 64,
            "example": "1oWbJQQHLyQqqf1SwxjSpudeA21"
          },
          "bvn": {
            "type": "string",
            "description": "Bank Verification Number (BVN)",
            "minLength": 11,
            "maxLength": 11,
            "example": "12234412345"
          },
          "status": {
            "type": "string",
            "description": "Account status",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PND",
              "BLACKLISTED"
            ],
            "example": "ACTIVE"
          },
          "type": {
            "type": "string",
            "description": "Account type",
            "enum": [
              "virtual",
              "outlet"
            ],
            "example": "virtual"
          },
          "accountName": {
            "type": "string",
            "description": "Account holder's name",
            "minLength": 8,
            "maxLength": 64,
            "example": "Daniel Scorsese"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "NGN"
          },
          "banks": {
            "type": "array",
            "description": "List of associated bank accounts",
            "items": {
              "type": "object",
              "properties": {
                "bankAccountNumber": {
                  "type": "string",
                  "description": "Bank account number",
                  "example": "93910"
                },
                "bankName": {
                  "type": "string",
                  "description": "Bank name",
                  "example": "Sterling Bank"
                },
                "bankAccountName": {
                  "type": "string",
                  "description": "Bank account holder name",
                  "example": "Nomba/Ifeoluwa Adeboye"
                }
              },
              "required": [
                "bankAccountNumber",
                "bankName",
                "bankAccountName"
              ]
            }
          }
        },
        "required": [
          "createdAt",
          "accountId",
          "accountHolderId",
          "accountRef",
          "bvn",
          "status",
          "type",
          "accountName",
          "banks",
          "currency"
        ]
      },
      "AccountBalanceResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Account balance",
            "example": "281946.0"
          },
          "currency": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "description": "Currency code",
            "example": "NGN"
          },
          "timeCreated": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp",
            "example": "2023-08-30T14:56:59.000Z"
          }
        },
        "required": [
          "amount",
          "currency",
          "timeCreated"
        ]
      },
      "TerminalAssignmentRequest": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial number",
            "example": "55555555"
          },
          "terminalLabel": {
            "type": "string",
            "description": "Terminal label",
            "example": "Testing"
          }
        },
        "required": [
          "serialNumber"
        ]
      },
      "TerminalResult": {
        "type": "object",
        "properties": {
          "terminalId": {
            "type": "string",
            "description": "Terminal ID",
            "example": "201124LM"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number",
            "example": "55555555"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "parentAccountId": {
            "type": "string",
            "description": "Parent account ID",
            "example": ""
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant name",
            "example": "trident and rees"
          },
          "terminalLabel": {
            "type": "string",
            "description": "Terminal label",
            "example": "Testing"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2020-09-23T10:21:48.789Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Updated timestamp",
            "example": "2023-09-04T15:23:55.173Z"
          }
        },
        "required": [
          "terminalId",
          "serialNumber",
          "accountId",
          "parentAccountId",
          "merchantName",
          "terminalLabel",
          "createdAt",
          "updatedAt"
        ]
      },
      "TerminalListResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Contains list of terminals",
            "items": {
              "$ref": "#/components/schemas/TerminalResult"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Cursor for pagination. It will be empty if there is no more page to scroll to",
            "example": "xchbaVFsjdsbaADddd"
          }
        }
      },
      "WalletTransferMetaObject": {
        "type": "object",
        "properties": {
          "merchantTxRef": {
            "type": "string",
            "description": "Merchant transaction reference",
            "example": "3JVW2xJCjj443oannREBuTaXDdji"
          },
          "api_client_id": {
            "type": "string",
            "description": "API client ID",
            "example": "6a7bed88-7c93-4a1c-a445-f88edbca6489"
          },
          "api_account_id": {
            "type": "string",
            "description": "API account ID",
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "rrn": {
            "type": "string",
            "description": "RRN (Retrieval Reference Number)",
            "example": "230908151711"
          }
        },
        "description": "Transaction meta data"
      },
      "WalletTransferRequest": {
        "type": "object",
        "description": "A structure representing an object required to post a wallet transfer.",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount to be transferred.",
            "example": 3500
          },
          "receiverAccountId": {
            "type": "string",
            "format": "uuid",
            "description": "The receiver's accountId.",
            "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
          },
          "merchantTxRef": {
            "type": "string",
            "description": "Unique reference used to track a transaction from an external process.",
            "example": "UNQ_123abGGhh5546"
          },
          "pin": {
            "type": "string",
            "description": "PIN",
            "example": "2222"
          }
        },
        "required": [
          "amount",
          "receiverAccountId",
          "merchantTxRef",
          "pin"
        ]
      },
      "WalletTransferResult": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Transfer amount",
            "example": 5502.0
          },
          "meta": {
            "$ref": "#/components/schemas/WalletTransferMetaObject"
          },
          "fee": {
            "type": "number",
            "format": "double",
            "description": "Transfer fee",
            "example": 50.0
          },
          "timeCreated": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2023-09-08T14:17:13.634Z"
          },
          "id": {
            "type": "string",
            "description": "Transfer ID",
            "example": "API-P2P-C24AD-a6443bf0-011c-4bc2-b739-4a2e33e2a27b"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "p2p"
          },
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "SUCCESS"
          }
        },
        "required": [
          "amount",
          "meta",
          "fee",
          "timeCreated",
          "id",
          "type",
          "status"
        ],
        "description": "Transfer data"
      },
      "BankTransactionMetaObject": {
        "type": "object",
        "properties": {
          "billerId": {
            "type": "string",
            "description": "Biller ID",
            "example": "API_FCIR5UQFMYS"
          },
          "terminalActionId": {
            "type": "string",
            "description": "Terminal action ID",
            "example": ""
          },
          "productId": {
            "type": "string",
            "description": "Product ID",
            "example": "p2p"
          },
          "fee": {
            "type": "number",
            "format": "double",
            "description": "Fee",
            "example": 0.0
          },
          "type": {
            "type": "string",
            "description": "Type",
            "example": "p2p"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction ID",
            "example": "API-P2P-84026-d8a4d658-6747-418d-a7e2-37bc6290310d"
          },
          "rrn": {
            "type": "string",
            "description": "RRN (Retrieval Reference Number)",
            "example": ""
          },
          "parentAccountId": {
            "type": "string",
            "description": "Parent account ID",
            "example": "01a10aeb-d989-460a-bbde-9842f2b4320f"
          },
          "terminalLabel": {
            "type": "string",
            "description": "Terminal label",
            "example": ""
          },
          "accountId": {
            "type": "string",
            "description": "Account ID",
            "example": "890022ce-bae0-45c1-9b9d-ee7872e6ca27"
          },
          "merchantTxRef": {
            "type": "string",
            "description": "Merchant transaction reference",
            "example": ""
          },
          "transactionAmount": {
            "type": "number",
            "format": "double",
            "description": "Transaction amount",
            "example": 7000.0
          },
          "mCollectionsId": {
            "type": "string",
            "description": "MCollections ID",
            "example": ""
          }
        }
      },
      "BankTransactionResult": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount",
            "example": 7000.0
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "example": "NGN"
          },
          "meta": {
            "$ref": "#/components/schemas/BankTransactionMetaObject"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": "SUCCESS"
          },
          "timeUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Updated timestamp",
            "example": "2023-09-08T19:05:21.000Z"
          },
          "walletBalance": {
            "type": "number",
            "format": "double",
            "description": "The account balance",
            "example": 285951.0
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction type",
            "example": "DEBIT"
          }
        },
        "required": [
          "amount",
          "currency",
          "meta",
          "status",
          "timeUpdated",
          "walletBalance",
          "transactionType"
        ]
      },
      "BankTransactionListResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Contains list of credit/debit transactions",
            "items": {
              "$ref": "#/components/schemas/BankTransactionResult"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Cursor for pagination. It will be empty if there is no more page to scroll to",
            "example": "xchbaVFsjdsbaADddd"
          }
        }
      },
      "FilterTransactionRequest": {
        "type": "object",
        "properties": {
          "transactionRef": {
            "type": "string",
            "description": "Transaction ID/Reference",
            "example": "POS-WITHDRAW-DFC05-693cd007-cd1e-4ea6-8b79-5f5c4d7a83ea"
          },
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "SUCCESS"
          },
          "source": {
            "type": "string",
            "description": "Transaction source",
            "example": "pos"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "withdrawal"
          },
          "terminalId": {
            "type": "string",
            "description": "Terminal ID",
            "example": "2KUD4AKB"
          },
          "rrn": {
            "type": "string",
            "description": "RRN (Retrieval Reference Number)",
            "example": "230908202632"
          },
          "merchantTxRef": {
            "type": "string",
            "description": "Merchant transaction reference",
            "example": "c90d-4b25-ad0f"
          }
        }
      },
      "TransactionResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Transaction ID",
            "example": "POS-WITHDRAW-DFC05-693cd007-cd1e-4ea6-8b79-5f5c4d7a83ea"
          },
          "status": {
            "type": "string",
            "description": "Transaction status",
            "example": "PAYMENT_FAILED"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Transaction amount",
            "example": 4000.0
          },
          "fixedCharge": {
            "type": "number",
            "format": "double",
            "description": "Fixed charge",
            "example": 0.0
          },
          "source": {
            "type": "string",
            "description": "Transaction source",
            "example": "pos"
          },
          "type": {
            "type": "string",
            "description": "Transaction type",
            "example": "withdrawal"
          },
          "gatewayMessage": {
            "type": "string",
            "description": "Gateway message",
            "example": "Insufficient funds"
          },
          "customerBillerId": {
            "type": "string",
            "description": "Customer biller ID",
            "example": "539983 **** **** 5118"
          },
          "timeCreated": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2023-09-08T19:26:34.657000Z"
          },
          "posTid": {
            "type": "string",
            "description": "POS terminal ID",
            "example": "2KUD4AKB"
          },
          "terminalId": {
            "type": "string",
            "description": "Terminal ID",
            "example": "2KUD4AKB"
          },
          "providerTerminalId": {
            "type": "string",
            "description": "Provider terminal ID",
            "example": "2KUD4AKB"
          },
          "rrn": {
            "type": "string",
            "description": "RRN (Retrieval Reference Number)",
            "example": "230908202632"
          },
          "posSerialNumber": {
            "type": "string",
            "description": "POS serial number",
            "example": "91230309116826"
          },
          "posTerminalLabel": {
            "type": "string",
            "description": "POS terminal label",
            "example": "KEB MUSA ABUBAKAR"
          },
          "stan": {
            "type": "string",
            "description": "STAN (System Trace Audit Number)",
            "example": "556734"
          },
          "paymentVendorReference": {
            "type": "string",
            "description": "Payment vendor reference",
            "example": "2KUD4AKB230908202632"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "example": "dfc05ca1-4e75-41dd-8e41-2d362d565893"
          },
          "posRrn": {
            "type": "string",
            "description": "POS RRN (Retrieval Reference Number)",
            "example": "230908202632"
          },
          "merchantTxRef": {
            "type": "string",
            "description": "Merchant transaction reference",
            "example": "c90d-4b25-ad0f"
          }
        },
        "required": [
          "id",
          "status",
          "amount",
          "source",
          "type",
          "gatewayMessage",
          "timeCreated"
        ]
      },
      "TransactionListResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Contains list of transactions",
            "items": {
              "$ref": "#/components/schemas/TransactionResult"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Cursor for pagination. It will be empty if there is no more page to scroll to",
            "example": "xchbaVFsjdsbaADddd"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "Nomba authenticates API calls with [OAuth2 HTTP bearer tokens](http://tools.ietf.org/html/rfc6750). There are two methods of authentication; [Client-Credentials method](https://www.rfc-editor.org/rfc/rfc6749) and [PKCE (Proof Key for Code Exchange)](https://www.rfc-editor.org/rfc/rfc7636) method. In each of the methods, You will get an `ACCESS_TOKEN`. You need to use an `\"Authorization\"` HTTP header to provide your `ACCESS_TOKEN`. For example: `Authorization: {ACCESS_TOKEN}`.",
        "scheme": "bearer",
        "type": "http",
        "bearerFormat": "JWT"
      }
    }
  }
}
